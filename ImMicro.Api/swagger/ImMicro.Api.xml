<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImMicro.Api</name>
    </assembly>
    <members>
        <member name="T:ImMicro.Api.Configurations.Startup.ConfigureApiVersioning">
            <summary>
            Configure Api Versioning
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureApiVersioning.AddApiVersioningConfigurations(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Api Versioning Configurations
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureApiVersioning.UseApiVersioningConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Api Versioning Configuration
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Configurations.Startup.ConfigureCORS">
            <summary>
            Configure CORS
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureCORS.AddCorsConfigurations(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add CORS Configurations
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureCORS.UseCorsConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use CORS Configuration
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Configurations.Startup.ConfigureIdentityServer">
            <summary>
            Configure Identity Server
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureIdentityServer.AddIdentityConfigurations(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add Identity Configurations
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Configurations.Startup.ConfigureLocalization">
            <summary>
            Configure Localization
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureLocalization.AddLocalizationsConfigurations(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Localizations Configurations
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureLocalization.UseLocalizationConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Localization Configuration
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Configurations.Startup.ConfigureSwagger">
            <summary>
            Add Swagger configuration extension
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureSwagger.AddSwaggerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Swagger configuration extension
            </summary>
            <param name="services">ServiceCollection</param>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Configurations.Startup.ConfigureSwagger.UseSwaggerConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Swagger configuration
            </summary>
            <param name="app">Application builder</param>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions">
            <summary>
            Configures the Swagger generation options.
            </summary>
            <remarks>This allows API versioning to define a Swagger document per API version after the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.</remarks>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions.CreateInfoForApiVersion(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiVersionDescription)">
            <summary>
            Gets the open api information.
            </summary>
            <param name="description">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiVersionDescription"/></param>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIOptions)">
            <summary>
            Configure the swagger ui configurations.
            </summary>
            <param name="options">The swagger ui options.</param>
        </member>
        <member name="T:ImMicro.Api.Configurations.Swagger.EnumSchemaFilter">
            <summary>
            Enum Schema Filter
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.EnumSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
            Apply
            </summary>
            <param name="schema"></param>
            <param name="context"></param>
        </member>
        <member name="T:ImMicro.Api.Configurations.Swagger.SwaggerDefaultValues">
            <summary>
            Represents the Swagger/Swashbuckle operation filter used to document the implicit API version parameter.
            </summary>
            <remarks>This <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter"/> is only required due to bugs in the <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator"/>.
            Once they are fixed and published, this class can be removed.</remarks>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:ImMicro.Api.Configurations.Swagger.SwaggerHttpHeaderFilter">
            <summary>
            <see cref="T:ImMicro.Api.Configurations.Swagger.SwaggerHttpHeaderFilter"/>
            </summary>
        </member>
        <member name="M:ImMicro.Api.Configurations.Swagger.SwaggerHttpHeaderFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Apply http header operation.
            </summary>
            <param name="operation">The <see cref="T:Microsoft.OpenApi.Models.OpenApiOperation"/> instance.</param>
            <param name="context">The <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext"/> instance.</param>
        </member>
        <member name="T:ImMicro.Api.Controllers.BaseController">
            <summary>
            Api base controller
            </summary>
        </member>
        <member name="P:ImMicro.Api.Controllers.BaseController.Mapper">
            <summary>
            Auto Mapper
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.BaseController.#ctor">
            <summary>
            Base Controller
            </summary>
        </member>
        <member name="T:ImMicro.Api.Controllers.HomeController">
            <summary>
            Api Home controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.HomeController.Home">
            <summary>
            Home Controller
            </summary>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Controllers.V1.AuditLogController">
            <summary>
            Audit Log Controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.AuditLogController.#ctor(ImMicro.Business.Audit.Abstract.IAuditLogService)">
            <summary>
            Audit Log Controller
            </summary>
            <param name="auditLogService"></param>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.AuditLogController.Search(Filtery.Models.FilteryRequest,System.Threading.CancellationToken)">
            <summary>
            Search Audit Log
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.AuditLogController.Export(ImMicro.Contract.App.ExportRequest,System.Threading.CancellationToken)">
            <summary>
            Export Audit Log
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.AuditLogController.Get(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Audit Log
            </summary>
        </member>
        <member name="T:ImMicro.Api.Controllers.V1.LoginController">
            <summary>
            Login Controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.LoginController.#ctor(ImMicro.Business.User.Abstract.IUserService)">
            <summary>
            The constructor of <see cref="T:ImMicro.Api.Controllers.V1.LoginController"/>.
            </summary>
            <param name="userService">The user service.</param>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.LoginController.Token(ImMicro.Contract.App.User.GetTokenContract,System.Threading.CancellationToken)">
            <summary>
            Get Token
            </summary>
            <returns>Returns user jwt token.</returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.LoginController.RefreshToken(ImMicro.Contract.App.User.RefreshTokenContract,System.Threading.CancellationToken)">
            <summary>
            Refresh Token
            </summary>
            <returns>Returns user jwt refresh token.</returns>
        </member>
        <member name="T:ImMicro.Api.Controllers.V1.MQSampleController">
            <summary>
            MQTest Controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.MQSampleController.#ctor(MassTransit.ISendEndpointProvider,Microsoft.Extensions.Options.IOptions{ImMicro.Common.Options.RabbitMqOption})">
            <summary>
            MQSample Controller
            </summary>
            <param name="sendEndpointProvider"></param>
            <param name="rabbitMqOptions"></param>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.MQSampleController.Test(System.Threading.CancellationToken)">
            <summary>
            Get Product
            </summary>
        </member>
        <member name="T:ImMicro.Api.Controllers.V1.ProductsController">
            <summary>
            Products Controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.#ctor(ImMicro.Business.Product.Abstract.IProductService)">
            <summary>
            Products Controller
            </summary>
            <param name="productService"></param>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.Get(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Product
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.CreateProduct(ImMicro.Contract.App.Product.CreateProductRequest,System.Threading.CancellationToken)">
            <summary>
            Create Product
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.UpdateProduct(ImMicro.Contract.App.Product.UpdateProductRequest,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update Product
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.DeleteProduct(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete Product
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.Search(Filtery.Models.FilteryRequest,System.Threading.CancellationToken)">
            <summary>
            Product Search
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.ProductsController.GetWithDapper(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get Product
            </summary>
        </member>
        <member name="T:ImMicro.Api.Controllers.V1.UsersController">
            <summary>
            Users Controller
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.#ctor(ImMicro.Business.User.Abstract.IUserService)">
            <summary>
            User Controller
            </summary>
            <param name="userService"></param>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.Get(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get User
            </summary>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.CreateUser(ImMicro.Contract.App.User.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Create User
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.UpdateUser(ImMicro.Contract.App.User.UpdateUserRequest,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Update User
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.DeleteUser(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete User
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImMicro.Api.Controllers.V1.UsersController.Search(Filtery.Models.FilteryRequest,System.Threading.CancellationToken)">
            <summary>
            User Search
            </summary>
            <returns></returns>
        </member>
        <member name="T:ImMicro.Api.Middlewares.ExceptionHandlerMiddleware">
            <summary>
            Global Exception handler middleware
            </summary>
        </member>
        <member name="M:ImMicro.Api.Middlewares.ExceptionHandlerMiddleware.#ctor(Microsoft.Extensions.Logging.ILogger{ImMicro.Api.Middlewares.ExceptionHandlerMiddleware},Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Global Exception handler middleware constructor
            </summary>
            <param name="logger">Logger</param>
            <param name="next">Next middleware</param>
        </member>
        <member name="M:ImMicro.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Middleware invoke method
            </summary>
            <param name="httpContext">Http Context</param>
        </member>
        <member name="T:ImMicro.Api.Middlewares.RequestLogMiddleware">
            <summary>
            Global request - response log middleware
            </summary>
        </member>
        <member name="M:ImMicro.Api.Middlewares.RequestLogMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            Global request - response log middleware constructor
            </summary>
            <param name="next">Next middleware</param>
            <param name="serviceScopeFactory">Service Scope Factory</param>
        </member>
        <member name="M:ImMicro.Api.Middlewares.RequestLogMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Middleware invoke method
            </summary>
            <param name="httpContext">Http Context</param>
        </member>
        <member name="T:ImMicro.Api.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:ImMicro.Api.Program.Main(System.String[])">
            <summary>
            Main method
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ImMicro.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Create Application Host
            </summary>
            <param name="args">Args</param>
            <returns>HostBuilder</returns>
        </member>
        <member name="T:ImMicro.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:ImMicro.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="P:ImMicro.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:ImMicro.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Application Services
            </summary>
            <param name="services">ServiceCollection</param>
        </member>
        <member name="M:ImMicro.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure Application Services
            </summary>
            <param name="app">Application Builder</param>
            <param name="env">Web Host Environment</param>
        </member>
        <member name="M:ImMicro.Api.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            Autofac DI Configuration
            </summary>
            <param name="builder"></param>
        </member>
    </members>
</doc>
